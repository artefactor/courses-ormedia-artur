Сущности (объекты) в системе
    • Фильм с названием, жанром, датой выпуска, картинкой.
    •  Пользователь с логином и ролью.

Нужно создать WEB-приложение, которое будет позволять следующие действия:
1. Главная страница — список фильмов, упорядоченных по году.
2. Возможность войти в приложение:
	а) можно сделать отдельной страницей, при открытии которой просьба ввести логин, а потом  - редирект на главную страницу.
	б) в углу отдельная маленькая форма, где можно ввести логин.
Логин  - это просто поле для ввода логина и кнопка Login. Никаких паролей и проверок на валидность — не нужно (для упрощения использования приложения)
Существуют 1 пользователь — admin с ролью ADMIN.
Все остальные пользователи создаются при первом входе с ролью USER (если пользователь вошел и вышел — его данные сохраняются в системе и доступны при последующих входах)

После входа пользователь видит главную страницу.

3. пользователь с ролью ADMIN имеет дополнительные следующие права:
3а. на странице со списком фильмов есть ссылка для добавления нового фильма.
3б. После нажатия на ссылку добавления нового фильма, пользователь видит форму с полями для создания. Он может заполнить поля и нажать на кнопку «Save» - фильм будет сохранен в системе.
(по реализации:
- вариант 1 картинка фильму можно загрузить в файловую систему и в базе сохранить только ее местоположение на файловой системе/имя,
- вариант 2  можно как сам объект в базу)
3с. После нажатия «Save»  - пользователь возвращается на страницу со списком и новый фильм должен там появиться
3д. Рядом с названем фильма есть ссылка “Edit” - можно редактировать фильм.
(Примечание: если картинки хранятся на файловой системе, то если картинка меняется — то неактуальная должна удалиться)
3е. Аналогично ссылка «Delete» - удаляется после подтверждения (Вы точно уверены?)

4. Пользователь с ролью USER имеет следующие права:
4а. Названия фильмов представляют собой ссылки. При нажатии на нее — открывается страница с фильмом. (у ADMIN эта функциональность тоже есть)
4с. Сортировка по году — возрастанию, убыванию
4д. Фильтр по жанру


5. Следующий уровень усложнения проекта (делается, если выполнено все остальное).

5а. Пользователь имеет возможность оценить фильм — поставить оценку по 5-бальной шкале.
Реализуется в виде компонента со звездами. При этом страница не перегружается, и пользователь видит свою оценку.
5б. Пользователь может изменить свою оценку.
5с. Пользователь может удалить свою оценку.
5д. На каждом фильме появляется вычисляемое поле — средняя оценка.
5е. Появляется сортировка — по средней оценке (по рейтингу)
5ф. Появляется фильтр - «Оцененные мной», «не оцененные мной»


Технические требования
1. Приложение написано с использованием Spring
2. Приложение написано с использованием Maven. Должно запускаться из командной строки
3. Для этого есть property-файл с конфигурацией, которую нужно заполнить и с примером.
Например,
MVN_HOME=
JAVA_HOME=
DB.USER=
DB.PASSWORD=
DB.URL=

4. Файл readme, который описывает как запустить приложение из командной строки, что необходимо настроить до этого. Например, скрипты по генерации схемы данных и начальных данных.


5. Сделать возможность использования приложения не используя базу данных.

Это можно сделать, например, введя maven Profile

mvn -P db   - запускает с базой данных
mvn -p memory – запускает без базы данных (данные в памяти) или с базой данных в памяти.

Также в качестве базы данных можно использовать hsqldb

6. Сервер должен выдавать демонстрационные данные при первой загрузке приложения.
7. Все двусмысленные или пропущенные требования разработчик может реализовать, основываясь на своем понимании и личном опыте как пользователя.